function myFunction(){var e,t,n,c;for(e=document.getElementById("team-input").value.toUpperCase(),t=document.getElementById("team-search").getElementsByTagName("tr"),c=0;c<t.length;c++)(n=t[c].getElementsByTagName("td")[0])&&(-1<(n.textContent||n.innerText).toUpperCase().indexOf(e)?t[c].style.display="":t[c].style.display="none")}$(document).ready(function(){jQuery(function(e){e("body").on("click","#selectlog",function(){e(".singlelog").prop("checked",this.checked)}),e("body").on("click",".singlelog",function(){e(".singlelog").length==e(".singlelog:checked").length?e("#selectlog").prop("checked",!0):e("#selectlog").prop("checked",!1)})}),jQuery(function(e){e("body").on("click","#selectmeeting",function(){e(".singlemeeting").prop("checked",this.checked)}),e("body").on("click",".singlemeeting",function(){e(".singlemeeting").length==e(".singlemeeting:checked").length?e("#selectmeeting").prop("checked",!0):e("#selectmeeting").prop("checked",!1)})}),$(".header .welcome").on("click",function(){$(".availability-popup").toggleClass("active"),$(this).toggleClass("active")});var t=$(".star-rating .fa-star");t.mouseover(function(){var e=parseInt($(this).data("rating"));$("input.rating-value").val(e),t.each(function(){return e>=parseInt($(this).data("rating"))?$(this).removeClass("checked").addClass("checked"):$(this).removeClass("checked")})}),$(".table-call-log tr").on("click",function(){$(".table-call-log").hide(),$(".more").show()}),$(".back-table").on("click",function(){$(".table-call-log").show(),$(".more").hide()}),$(".add-tag").click(function(){var e=$(".input-add-tag").val();$(".tags-list").append('<li class="tag-item">'+e+'<a class="remove-tag" href="#/"><img src="img/icon-tag-close.svg" alt="Icon" /></a></li>'),$(".input-add-tag").val("")}),$(".tag-item a").on("click",function(){console.log("sdf"),$(this).parent("li").remove()}),$(document).on("click",".tag-item a",function(e){e.preventDefault(),$(this).parent("li").remove()})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsibXlGdW5jdGlvbiIsImZpbHRlciIsInRyIiwidGQiLCJpIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsInZhbHVlIiwidG9VcHBlckNhc2UiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsImxlbmd0aCIsInRleHRDb250ZW50IiwiaW5uZXJUZXh0IiwiaW5kZXhPZiIsInN0eWxlIiwiZGlzcGxheSIsIiQiLCJyZWFkeSIsImpRdWVyeSIsIm9uIiwicHJvcCIsInRoaXMiLCJjaGVja2VkIiwidG9nZ2xlQ2xhc3MiLCIkc3Rhcl9yYXRpbmciLCJtb3VzZW92ZXIiLCJyYXRlIiwicGFyc2VJbnQiLCJkYXRhIiwidmFsIiwiZWFjaCIsInJlbW92ZUNsYXNzIiwiYWRkQ2xhc3MiLCJoaWRlIiwic2hvdyIsImNsaWNrIiwiZ2V0VmFsIiwiYXBwZW5kIiwiY29uc29sZSIsImxvZyIsInBhcmVudCIsInJlbW92ZSIsImUiLCJwcmV2ZW50RGVmYXVsdCJdLCJtYXBwaW5ncyI6IkFBNkZBLFNBQVNBLGFBRUwsSUFBV0MsRUFBZUMsRUFBSUMsRUFBSUMsRUFPbEMsSUFMQUgsRUFEUUksU0FBU0MsZUFBZSxjQUNqQkMsTUFBTUMsY0FFckJOLEVBRFFHLFNBQVNDLGVBQWUsZUFDckJHLHFCQUFxQixNQUczQkwsRUFBSSxFQUFHQSxFQUFJRixFQUFHUSxPQUFRTixLQUN2QkQsRUFBS0QsRUFBR0UsR0FBR0sscUJBQXFCLE1BQU0sT0FHWSxHQURuQ04sRUFBR1EsYUFBZVIsRUFBR1MsV0FDbkJKLGNBQWNLLFFBQVFaLEdBQy9CQyxFQUFHRSxHQUFHVSxNQUFNQyxRQUFVLEdBRXRCYixFQUFHRSxHQUFHVSxNQUFNQyxRQUFVLFFBMUd0Q0MsRUFBR1gsVUFBV1ksTUFBTSxXQUloQkMsT0FBTyxTQUFTRixHQUNaQSxFQUFFLFFBQVFHLEdBQUcsUUFBUyxhQUFjLFdBQ2hDSCxFQUFFLGNBQWNJLEtBQUssVUFBV0MsS0FBS0MsV0FHekNOLEVBQUUsUUFBUUcsR0FBRyxRQUFTLGFBQWMsV0FDN0JILEVBQUUsY0FBY04sUUFBVU0sRUFBRSxzQkFBc0JOLE9BQ2pETSxFQUFFLGNBQWNJLEtBQUssV0FBVyxHQUVoQ0osRUFBRSxjQUFjSSxLQUFLLFdBQVcsT0FNNUNGLE9BQU8sU0FBU0YsR0FDWkEsRUFBRSxRQUFRRyxHQUFHLFFBQVMsaUJBQWtCLFdBQ3BDSCxFQUFFLGtCQUFrQkksS0FBSyxVQUFXQyxLQUFLQyxXQUc3Q04sRUFBRSxRQUFRRyxHQUFHLFFBQVMsaUJBQWtCLFdBQ2pDSCxFQUFFLGtCQUFrQk4sUUFBVU0sRUFBRSwwQkFBMEJOLE9BQ3pETSxFQUFFLGtCQUFrQkksS0FBSyxXQUFXLEdBRXBDSixFQUFFLGtCQUFrQkksS0FBSyxXQUFXLE9BUWhESixFQUFFLG9CQUFvQkcsR0FBRyxRQUFTLFdBQy9CSCxFQUFFLHVCQUF1Qk8sWUFBWSxVQUNyQ1AsRUFBRUssTUFBTUUsWUFBWSxZQUt2QixJQUFJQyxFQUFlUixFQUFFLHlCQUVyQlEsRUFBYUMsVUFBVSxXQUNuQixJQUFJQyxFQUFPQyxTQUFTWCxFQUFFSyxNQUFNTyxLQUFLLFdBQ2pDWixFQUFFLHNCQUFzQmEsSUFBSUgsR0FDNUJGLEVBQWFNLEtBQUssV0FDZCxPQUFJSixHQUFRQyxTQUFTWCxFQUFFSyxNQUFNTyxLQUFLLFdBQ3ZCWixFQUFFSyxNQUFNVSxZQUFZLFdBQVdDLFNBQVMsV0FFeENoQixFQUFFSyxNQUFNVSxZQUFZLGVBT3ZDZixFQUFFLHNCQUFzQkcsR0FBRyxRQUFTLFdBQ2pDSCxFQUFFLG1CQUFtQmlCLE9BQ3JCakIsRUFBRSxTQUFTa0IsU0FHZGxCLEVBQUUsZUFBZUcsR0FBRyxRQUFTLFdBQ3pCSCxFQUFFLG1CQUFtQmtCLE9BQ3JCbEIsRUFBRSxTQUFTaUIsU0FPZmpCLEVBQUUsWUFBWW1CLE1BQU0sV0FDaEIsSUFBSUMsRUFBU3BCLEVBQUUsa0JBQWtCYSxNQUNqQ2IsRUFBRSxjQUFjcUIsT0FBTyx3QkFBMEJELEVBQVMsNEZBQzFEcEIsRUFBRSxrQkFBa0JhLElBQUksTUFHNUJiLEVBQUUsZUFBZUcsR0FBRyxRQUFTLFdBQ3pCbUIsUUFBUUMsSUFBSSxPQUNidkIsRUFBRUssTUFBTW1CLE9BQU8sTUFBTUMsV0FHeEJ6QixFQUFFWCxVQUFVYyxHQUFHLFFBQVEsY0FBYyxTQUFTdUIsR0FDMUNBLEVBQUVDLGlCQUNGM0IsRUFBRUssTUFBTW1CLE9BQU8sTUFBTUMiLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDdXN0b21cbiAqL1xuJCggZG9jdW1lbnQgKS5yZWFkeShmdW5jdGlvbigpIHtcblxuICAgIC8vIFRhYmxlIGNoZWNrYm94XG5cbiAgICBqUXVlcnkoZnVuY3Rpb24oJCkge1xuICAgICAgICAkKCdib2R5Jykub24oJ2NsaWNrJywgJyNzZWxlY3Rsb2cnLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICQoJy5zaW5nbGVsb2cnKS5wcm9wKCdjaGVja2VkJywgdGhpcy5jaGVja2VkKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgJCgnYm9keScpLm9uKCdjbGljaycsICcuc2luZ2xlbG9nJywgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBpZigkKCcuc2luZ2xlbG9nJykubGVuZ3RoID09ICQoJy5zaW5nbGVsb2c6Y2hlY2tlZCcpLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICQoJyNzZWxlY3Rsb2cnKS5wcm9wKCdjaGVja2VkJywgdHJ1ZSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICQoXCIjc2VsZWN0bG9nXCIpLnByb3AoJ2NoZWNrZWQnLCBmYWxzZSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICBqUXVlcnkoZnVuY3Rpb24oJCkge1xuICAgICAgICAkKCdib2R5Jykub24oJ2NsaWNrJywgJyNzZWxlY3RtZWV0aW5nJywgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAkKCcuc2luZ2xlbWVldGluZycpLnByb3AoJ2NoZWNrZWQnLCB0aGlzLmNoZWNrZWQpO1xuICAgICAgICB9KTtcblxuICAgICAgICAkKCdib2R5Jykub24oJ2NsaWNrJywgJy5zaW5nbGVtZWV0aW5nJywgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBpZigkKCcuc2luZ2xlbWVldGluZycpLmxlbmd0aCA9PSAkKCcuc2luZ2xlbWVldGluZzpjaGVja2VkJykubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgJCgnI3NlbGVjdG1lZXRpbmcnKS5wcm9wKCdjaGVja2VkJywgdHJ1ZSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICQoXCIjc2VsZWN0bWVldGluZ1wiKS5wcm9wKCdjaGVja2VkJywgZmFsc2UpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgLy8gQXZhaWxhYmlsaXR5IHBvcHVwXG5cbiAgICAkKCcuaGVhZGVyIC53ZWxjb21lJykub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xuICAgICAgICQoJy5hdmFpbGFiaWxpdHktcG9wdXAnKS50b2dnbGVDbGFzcygnYWN0aXZlJyk7XG4gICAgICAgJCh0aGlzKS50b2dnbGVDbGFzcygnYWN0aXZlJyk7XG4gICAgfSk7XG5cbiAgICAvLyBSYXRpbmdcblxuICAgIHZhciAkc3Rhcl9yYXRpbmcgPSAkKCcuc3Rhci1yYXRpbmcgLmZhLXN0YXInKTtcblxuICAgICRzdGFyX3JhdGluZy5tb3VzZW92ZXIoZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciByYXRlID0gcGFyc2VJbnQoJCh0aGlzKS5kYXRhKCdyYXRpbmcnKSk7XG4gICAgICAgICQoJ2lucHV0LnJhdGluZy12YWx1ZScpLnZhbChyYXRlKTtcbiAgICAgICAgJHN0YXJfcmF0aW5nLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBpZiAocmF0ZSA+PSBwYXJzZUludCgkKHRoaXMpLmRhdGEoJ3JhdGluZycpKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiAkKHRoaXMpLnJlbW92ZUNsYXNzKCdjaGVja2VkJykuYWRkQ2xhc3MoJ2NoZWNrZWQnKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuICQodGhpcykucmVtb3ZlQ2xhc3MoJ2NoZWNrZWQnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICAvLyBUYWJsZSBjYWxsIGxvZyBtb3JlXG5cbiAgICAkKCcudGFibGUtY2FsbC1sb2cgdHInKS5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgJCgnLnRhYmxlLWNhbGwtbG9nJykuaGlkZSgpO1xuICAgICAgICQoJy5tb3JlJykuc2hvdygpO1xuICAgIH0pO1xuXG4gICAgJCgnLmJhY2stdGFibGUnKS5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICQoJy50YWJsZS1jYWxsLWxvZycpLnNob3coKTtcbiAgICAgICAgJCgnLm1vcmUnKS5oaWRlKCk7XG4gICAgfSk7XG5cbiAgICAvLyBBZGQgdGFnc1xuXG5cblxuICAgICQoXCIuYWRkLXRhZ1wiKS5jbGljayhmdW5jdGlvbigpe1xuICAgICAgICB2YXIgZ2V0VmFsID0gJChcIi5pbnB1dC1hZGQtdGFnXCIpLnZhbCgpO1xuICAgICAgICAkKFwiLnRhZ3MtbGlzdFwiKS5hcHBlbmQoJzxsaSBjbGFzcz1cInRhZy1pdGVtXCI+JyArIGdldFZhbCArICc8YSBjbGFzcz1cInJlbW92ZS10YWdcIiBocmVmPVwiIy9cIj48aW1nIHNyYz1cImltZy9pY29uLXRhZy1jbG9zZS5zdmdcIiBhbHQ9XCJJY29uXCIgLz48L2E+PC9saT4nKTtcbiAgICAgICAgJChcIi5pbnB1dC1hZGQtdGFnXCIpLnZhbCgnJyk7XG4gICAgfSk7XG5cbiAgICAkKCcudGFnLWl0ZW0gYScpLm9uKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ3NkZicpO1xuICAgICAgICQodGhpcykucGFyZW50KCdsaScpLnJlbW92ZSgpO1xuICAgIH0pO1xuXG4gICAgJChkb2N1bWVudCkub24oJ2NsaWNrJywnLnRhZy1pdGVtIGEnLGZ1bmN0aW9uKGUpe1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICQodGhpcykucGFyZW50KCdsaScpLnJlbW92ZSgpO1xuICAgIH0pO1xufSk7XG5cbmZ1bmN0aW9uIG15RnVuY3Rpb24oKSB7XG4gICAgLy8gRGVjbGFyZSB2YXJpYWJsZXNcbiAgICB2YXIgaW5wdXQsIGZpbHRlciwgdGFibGUsIHRyLCB0ZCwgaSwgdHh0VmFsdWU7XG4gICAgaW5wdXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRlYW0taW5wdXRcIik7XG4gICAgZmlsdGVyID0gaW5wdXQudmFsdWUudG9VcHBlckNhc2UoKTtcbiAgICB0YWJsZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidGVhbS1zZWFyY2hcIik7XG4gICAgdHIgPSB0YWJsZS5nZXRFbGVtZW50c0J5VGFnTmFtZShcInRyXCIpO1xuXG4gICAgLy8gTG9vcCB0aHJvdWdoIGFsbCB0YWJsZSByb3dzLCBhbmQgaGlkZSB0aG9zZSB3aG8gZG9uJ3QgbWF0Y2ggdGhlIHNlYXJjaCBxdWVyeVxuICAgIGZvciAoaSA9IDA7IGkgPCB0ci5sZW5ndGg7IGkrKykge1xuICAgICAgICB0ZCA9IHRyW2ldLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwidGRcIilbMF07XG4gICAgICAgIGlmICh0ZCkge1xuICAgICAgICAgICAgdHh0VmFsdWUgPSB0ZC50ZXh0Q29udGVudCB8fCB0ZC5pbm5lclRleHQ7XG4gICAgICAgICAgICBpZiAodHh0VmFsdWUudG9VcHBlckNhc2UoKS5pbmRleE9mKGZpbHRlcikgPiAtMSkge1xuICAgICAgICAgICAgICAgIHRyW2ldLnN0eWxlLmRpc3BsYXkgPSBcIlwiO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0cltpXS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59Il19
